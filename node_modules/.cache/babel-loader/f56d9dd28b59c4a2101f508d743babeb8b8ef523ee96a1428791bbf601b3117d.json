{"ast":null,"code":"var _jsxFileName = \"/workspaces/wait-list/src/widgets/profileMain/block-profile-socials/BlockProfileSocials.tsx\";\nimport { CardLayout } from \"../../../shared/layouts/cardLayout/CardLayout\";\nimport { Button } from \"../../../shared/ui/button/Button\";\nimport { XpButton } from \"../../../shared/ui/xpButton/XpButton\";\nimport s from \"./blockProfileSocials.module.scss\";\nimport { ReactComponent as Completed } from \"../../../shared/assets/icons/completed.svg\";\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BlockProfileSocials = ({\n  socialsProfile\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.socials,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: s.titleSocials,\n      children: \" Socials\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.socialsCards,\n      children: socialsProfile.slice(0, 5).map(x => /*#__PURE__*/_jsxDEV(CardLayout, {\n        classNamesContainer: cn(s.customSocialsCard, {\n          [s.completed]: x.completed\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: s.socialsHeader,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: s.socialsType,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: x.avatar,\n              alt: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: cn(s.socialsName, {\n                [s.completedText]: x.completed\n              }),\n              children: x.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XpButton, {\n            completed: x.completed,\n            xp: x.xp,\n            classNameContainer: s.customXpCounts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"fullWidth\",\n          icon: x.completed ? /*#__PURE__*/_jsxDEV(Completed, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 35\n          }, this) : null,\n          btnTypeStyle: x.completed ? \"completed\" : \"primary\",\n          children: x.completed ? \"Connected\" : \"Connect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, x.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_c = BlockProfileSocials;\nvar _c;\n$RefreshReg$(_c, \"BlockProfileSocials\");","map":{"version":3,"names":["CardLayout","Button","XpButton","s","ReactComponent","Completed","cn","jsxDEV","_jsxDEV","BlockProfileSocials","socialsProfile","className","socials","children","titleSocials","fileName","_jsxFileName","lineNumber","columnNumber","socialsCards","slice","map","x","classNamesContainer","customSocialsCard","completed","socialsHeader","socialsType","src","avatar","alt","name","socialsName","completedText","xp","classNameContainer","customXpCounts","size","icon","btnTypeStyle","id","_c","$RefreshReg$"],"sources":["/workspaces/wait-list/src/widgets/profileMain/block-profile-socials/BlockProfileSocials.tsx"],"sourcesContent":["import { SocialsProfileType } from \"../../../shared/const/socialsProfile\";\nimport { CardLayout } from \"../../../shared/layouts/cardLayout/CardLayout\";\nimport { Button } from \"../../../shared/ui/button/Button\";\nimport { XpButton } from \"../../../shared/ui/xpButton/XpButton\";\nimport s from \"./blockProfileSocials.module.scss\";\nimport { ReactComponent as Completed } from \"../../../shared/assets/icons/completed.svg\";\n\nimport cn from \"classnames\";\n\ninterface Props {\n  socialsProfile: SocialsProfileType[];\n}\n\nexport const BlockProfileSocials = ({ socialsProfile }: Props) => {\n  return (\n    <div className={s.socials}>\n      <h2 className={s.titleSocials}> Socials</h2>\n\n      <div className={s.socialsCards}>\n        {socialsProfile.slice(0, 5).map((x: SocialsProfileType) => (\n          <CardLayout\n            key={x.id}\n            classNamesContainer={cn(s.customSocialsCard, {\n              [s.completed]: x.completed,\n            })}\n          >\n            <div className={s.socialsHeader}>\n              <div className={s.socialsType}>\n                <img src={x.avatar} alt={x.name} />\n                <span\n                  className={cn(s.socialsName, {\n                    [s.completedText]: x.completed,\n                  })}\n                >\n                  {x.name}\n                </span>\n              </div>\n              <XpButton\n                completed={x.completed}\n                xp={x.xp}\n                classNameContainer={s.customXpCounts}\n              />\n            </div>\n\n            <Button\n              size=\"fullWidth\"\n              icon={x.completed ? <Completed /> : null}\n              btnTypeStyle={x.completed ? \"completed\" : \"primary\"}\n            >\n              {x.completed ? \"Connected\" : \"Connect\"}\n            </Button>\n          </CardLayout>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}