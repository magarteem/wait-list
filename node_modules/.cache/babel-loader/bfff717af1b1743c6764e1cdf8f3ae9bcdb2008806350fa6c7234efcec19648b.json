{"ast":null,"code":"import{referralActivity}from\"../../../shared/const/referralActivity\";import{CardLayout}from\"../../../shared/layouts/cardLayout/CardLayout\";import{XpButton}from\"../../../shared/ui/xpButton/XpButton\";import s from\"./blockCurrentRanking.module.scss\";import{ReactComponent as Sorting}from\"../../../shared/assets/icons/sorting.svg\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const BlockCurrentRanking=()=>{return/*#__PURE__*/_jsxs(\"div\",{className:s.blockEarn,children:[/*#__PURE__*/_jsx(\"h2\",{className:s.titleBlockEarn,children:\"How to Earn\"}),/*#__PURE__*/_jsx(CardLayout,{hoHoverStyles:true,children:/*#__PURE__*/_jsx(\"div\",{className:s.tableContainer,children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{className:s.rankColumn,children:/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\",alignItems:\"center\",gap:\"16px\",width:\"80px\",height:\"44px\",alignSelf:\"center\"},children:[\"Rank \",/*#__PURE__*/_jsx(Sorting,{})]})}),/*#__PURE__*/_jsx(\"th\",{children:\"Username\"}),/*#__PURE__*/_jsx(\"th\",{className:s.xpColumn,children:\"XP Points\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:referralActivity.map(x=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:x.id}),/*#__PURE__*/_jsxs(\"td\",{style:{display:\"flex\",alignItems:\"center\",gap:\"16px\",height:\"56px\",alignSelf:\"center\"},children:[x.avatar&&/*#__PURE__*/_jsx(\"img\",{src:x.avatar,alt:x.name}),/*#__PURE__*/_jsx(\"span\",{children:x.name})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(XpButton,{completed:false,xp:x.xp,classNameContainer:s.customXpCounts})})]},x.id))})]})})})]});};","map":{"version":3,"names":["referralActivity","CardLayout","XpButton","s","ReactComponent","Sorting","jsx","_jsx","jsxs","_jsxs","BlockCurrentRanking","className","blockEarn","children","titleBlockEarn","hoHoverStyles","tableContainer","rankColumn","style","display","alignItems","gap","width","height","alignSelf","xpColumn","map","x","id","avatar","src","alt","name","completed","xp","classNameContainer","customXpCounts"],"sources":["/workspaces/wait-list/src/widgets/leaderboardMain/block-current-ranking/BlockCurrentRanking.tsx"],"sourcesContent":["import { referralActivity } from \"../../../shared/const/referralActivity\";\nimport { CardLayout } from \"../../../shared/layouts/cardLayout/CardLayout\";\nimport { XpButton } from \"../../../shared/ui/xpButton/XpButton\";\nimport s from \"./blockCurrentRanking.module.scss\";\nimport { ReactComponent as Sorting } from \"../../../shared/assets/icons/sorting.svg\";\n\nexport const BlockCurrentRanking = () => {\n  return (\n    <div className={s.blockEarn}>\n      <h2 className={s.titleBlockEarn}>How to Earn</h2>\n\n      <CardLayout hoHoverStyles={true}>\n        <div className={s.tableContainer}>\n          <table>\n            <thead>\n              <tr>\n                <th className={s.rankColumn}>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      gap: \"16px\",\n                      width: \"80px\",\n                      height: \"44px\",\n                      alignSelf: \"center\",\n                    }}\n                  >\n                    Rank <Sorting />\n                  </div>\n                </th>\n                <th>Username</th>\n                <th className={s.xpColumn}>XP Points</th>\n              </tr>\n            </thead>\n            <tbody>\n              {referralActivity.map((x) => (\n                <tr key={x.id}>\n                  <td>{x.id}</td>\n                  <td\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      gap: \"16px\",\n                      height: \"56px\",\n                      alignSelf: \"center\",\n                    }}\n                  >\n                    {x.avatar && <img src={x.avatar} alt={x.name} />}\n                    <span>{x.name}</span>\n                  </td>\n                  <td>\n                    <XpButton\n                      completed={false}\n                      xp={x.xp}\n                      classNameContainer={s.customXpCounts}\n                    />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </CardLayout>\n    </div>\n  );\n};\n"],"mappings":"AAAA,OAASA,gBAAgB,KAAQ,wCAAwC,CACzE,OAASC,UAAU,KAAQ,+CAA+C,CAC1E,OAASC,QAAQ,KAAQ,sCAAsC,CAC/D,MAAO,CAAAC,CAAC,KAAM,mCAAmC,CACjD,OAASC,cAAc,GAAI,CAAAC,OAAO,KAAQ,0CAA0C,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErF,MAAO,MAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CACvC,mBACED,KAAA,QAAKE,SAAS,CAAER,CAAC,CAACS,SAAU,CAAAC,QAAA,eAC1BN,IAAA,OAAII,SAAS,CAAER,CAAC,CAACW,cAAe,CAAAD,QAAA,CAAC,aAAW,CAAI,CAAC,cAEjDN,IAAA,CAACN,UAAU,EAACc,aAAa,CAAE,IAAK,CAAAF,QAAA,cAC9BN,IAAA,QAAKI,SAAS,CAAER,CAAC,CAACa,cAAe,CAAAH,QAAA,cAC/BJ,KAAA,UAAAI,QAAA,eACEN,IAAA,UAAAM,QAAA,cACEJ,KAAA,OAAAI,QAAA,eACEN,IAAA,OAAII,SAAS,CAAER,CAAC,CAACc,UAAW,CAAAJ,QAAA,cAC1BJ,KAAA,QACES,KAAK,CAAE,CACLC,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QAAQ,CACpBC,GAAG,CAAE,MAAM,CACXC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MAAM,CACdC,SAAS,CAAE,QACb,CAAE,CAAAX,QAAA,EACH,OACM,cAAAN,IAAA,CAACF,OAAO,GAAE,CAAC,EACb,CAAC,CACJ,CAAC,cACLE,IAAA,OAAAM,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBN,IAAA,OAAII,SAAS,CAAER,CAAC,CAACsB,QAAS,CAAAZ,QAAA,CAAC,WAAS,CAAI,CAAC,EACvC,CAAC,CACA,CAAC,cACRN,IAAA,UAAAM,QAAA,CACGb,gBAAgB,CAAC0B,GAAG,CAAEC,CAAC,eACtBlB,KAAA,OAAAI,QAAA,eACEN,IAAA,OAAAM,QAAA,CAAKc,CAAC,CAACC,EAAE,CAAK,CAAC,cACfnB,KAAA,OACES,KAAK,CAAE,CACLC,OAAO,CAAE,MAAM,CACfC,UAAU,CAAE,QAAQ,CACpBC,GAAG,CAAE,MAAM,CACXE,MAAM,CAAE,MAAM,CACdC,SAAS,CAAE,QACb,CAAE,CAAAX,QAAA,EAEDc,CAAC,CAACE,MAAM,eAAItB,IAAA,QAAKuB,GAAG,CAAEH,CAAC,CAACE,MAAO,CAACE,GAAG,CAAEJ,CAAC,CAACK,IAAK,CAAE,CAAC,cAChDzB,IAAA,SAAAM,QAAA,CAAOc,CAAC,CAACK,IAAI,CAAO,CAAC,EACnB,CAAC,cACLzB,IAAA,OAAAM,QAAA,cACEN,IAAA,CAACL,QAAQ,EACP+B,SAAS,CAAE,KAAM,CACjBC,EAAE,CAAEP,CAAC,CAACO,EAAG,CACTC,kBAAkB,CAAEhC,CAAC,CAACiC,cAAe,CACtC,CAAC,CACA,CAAC,GApBET,CAAC,CAACC,EAqBP,CACL,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,CACI,CAAC,EACV,CAAC,CAEV,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}