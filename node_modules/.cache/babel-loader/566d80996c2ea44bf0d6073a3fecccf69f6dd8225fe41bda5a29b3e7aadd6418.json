{"ast":null,"code":"var _jsxFileName = \"/workspaces/wait-list/src/shared/ui/button/Button.tsx\";\nimport styles from \"./button.module.scss\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Button = ({\n  btnTypeStyle = \"primary\",\n  className,\n  children,\n  size = \"sm\",\n  icon,\n  ...props\n}) => {\n  let typeButtonClass;\n  switch (btnTypeStyle) {\n    case \"primary\":\n      typeButtonClass = styles.primary;\n      break;\n    case \"second\":\n      typeButtonClass = styles.second;\n      break;\n    case \"completed\":\n      typeButtonClass = styles.completed;\n      break;\n    case \"dark\":\n      typeButtonClass = styles.dark;\n      break;\n    default:\n      typeButtonClass = styles.primary;\n      break;\n  }\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: classNames(typeButtonClass, {\n      [styles.large]: size === \"large\"\n    }, {\n      [styles.fullWidth]: size === \"fullWidth\"\n    }, className),\n    ...props,\n    children: [children, icon ? icon : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nvar _c;\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["styles","classNames","jsxDEV","_jsxDEV","Button","btnTypeStyle","className","children","size","icon","props","typeButtonClass","primary","second","completed","dark","large","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspaces/wait-list/src/shared/ui/button/Button.tsx"],"sourcesContent":["import { ComponentPropsWithoutRef, ReactNode } from \"react\";\nimport styles from \"./button.module.scss\";\nimport classNames from \"classnames\";\nimport { ReactComponent as Completed } from \"../../assets/icons/completed.svg\";\n\ntype ButtonTypes = \"primary\" | \"second\" | \"completed\" | \"dark\";\n\ntype Props = {\n  btnTypeStyle?: ButtonTypes;\n  children?: ReactNode;\n  size?: \"sm\" | \"large\" | \"fullWidth\";\n  icon?: ReactNode;\n} & ComponentPropsWithoutRef<\"button\">;\n\nexport const Button = ({\n  btnTypeStyle = \"primary\",\n  className,\n  children,\n  size = \"sm\",\n  icon,\n  ...props\n}: Props) => {\n  let typeButtonClass;\n  switch (btnTypeStyle) {\n    case \"primary\":\n      typeButtonClass = styles.primary;\n      break;\n    case \"second\":\n      typeButtonClass = styles.second;\n      break;\n    case \"completed\":\n      typeButtonClass = styles.completed;\n      break;\n    case \"dark\":\n      typeButtonClass = styles.dark;\n      break;\n    default:\n      typeButtonClass = styles.primary;\n      break;\n  }\n  return (\n    <button\n      className={classNames(\n        typeButtonClass,\n        { [styles.large]: size === \"large\" },\n        { [styles.fullWidth]: size === \"fullWidth\" },\n        className\n      )}\n      {...props}\n    >\n      {children}\n      {icon ? icon : null}\n    </button>\n  );\n};\n"],"mappings":";AACA,OAAOA,MAAM,MAAM,sBAAsB;AACzC,OAAOC,UAAU,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYpC,OAAO,MAAMC,MAAM,GAAGA,CAAC;EACrBC,YAAY,GAAG,SAAS;EACxBC,SAAS;EACTC,QAAQ;EACRC,IAAI,GAAG,IAAI;EACXC,IAAI;EACJ,GAAGC;AACE,CAAC,KAAK;EACX,IAAIC,eAAe;EACnB,QAAQN,YAAY;IAClB,KAAK,SAAS;MACZM,eAAe,GAAGX,MAAM,CAACY,OAAO;MAChC;IACF,KAAK,QAAQ;MACXD,eAAe,GAAGX,MAAM,CAACa,MAAM;MAC/B;IACF,KAAK,WAAW;MACdF,eAAe,GAAGX,MAAM,CAACc,SAAS;MAClC;IACF,KAAK,MAAM;MACTH,eAAe,GAAGX,MAAM,CAACe,IAAI;MAC7B;IACF;MACEJ,eAAe,GAAGX,MAAM,CAACY,OAAO;MAChC;EACJ;EACA,oBACET,OAAA;IACEG,SAAS,EAAEL,UAAU,CACnBU,eAAe,EACf;MAAE,CAACX,MAAM,CAACgB,KAAK,GAAGR,IAAI,KAAK;IAAQ,CAAC,EACpC;MAAE,CAACR,MAAM,CAACiB,SAAS,GAAGT,IAAI,KAAK;IAAY,CAAC,EAC5CF,SACF,CAAE;IAAA,GACEI,KAAK;IAAAH,QAAA,GAERA,QAAQ,EACRE,IAAI,GAAGA,IAAI,GAAG,IAAI;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEb,CAAC;AAACC,EAAA,GAxCWlB,MAAM;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}